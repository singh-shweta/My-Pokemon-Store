{"ast":null,"code":"import \"../../utilities/globals/index.js\";\nexport * from \"./useApolloClient.js\";\nexport * from \"./useLazyQuery.js\";\nexport * from \"./useMutation.js\";\nexport { useQuery } from \"./useQuery.js\";\nexport * from \"./useSubscription.js\";\nexport * from \"./useReactiveVar.js\";\nexport * from \"./useFragment.js\";\nexport { useSuspenseQuery } from \"./useSuspenseQuery.js\";\nexport { useBackgroundQuery } from \"./useBackgroundQuery.js\";\nexport { useLoadableQuery } from \"./useLoadableQuery.js\";\nexport { useQueryRefHandlers } from \"./useQueryRefHandlers.js\";\nexport { useReadQuery } from \"./useReadQuery.js\";\nexport { skipToken } from \"./constants.js\";","map":{"version":3,"sources":["../../../src/react/hooks/index.ts"],"names":[],"mappings":"AAAA,OAAO,kCAAkC;AAEzC,cAAc,sBAAsB;AACpC,cAAc,mBAAmB;AACjC,cAAc,kBAAkB;AAChC,SAAS,QAAQ,QAAQ,eAAe;AACxC,cAAc,sBAAsB;AACpC,cAAc,qBAAqB;AACnC,cAAc,kBAAkB;AAEhC,SAAS,gBAAgB,QAAQ,uBAAuB;AAExD,SAAS,kBAAkB,QAAQ,yBAAyB;AAK5D,SAAS,gBAAgB,QAAQ,uBAAuB;AAExD,SAAS,mBAAmB,QAAQ,0BAA0B;AAE9D,SAAS,YAAY,QAAQ,mBAAmB;AAChD,SAAS,SAAS,QAAQ,gBAAgB","sourcesContent":["import \"../../utilities/globals/index.js\";\n\nexport * from \"./useApolloClient.js\";\nexport * from \"./useLazyQuery.js\";\nexport * from \"./useMutation.js\";\nexport { useQuery } from \"./useQuery.js\";\nexport * from \"./useSubscription.js\";\nexport * from \"./useReactiveVar.js\";\nexport * from \"./useFragment.js\";\nexport type { UseSuspenseQueryResult } from \"./useSuspenseQuery.js\";\nexport { useSuspenseQuery } from \"./useSuspenseQuery.js\";\nexport type { UseBackgroundQueryResult } from \"./useBackgroundQuery.js\";\nexport { useBackgroundQuery } from \"./useBackgroundQuery.js\";\nexport type {\n  LoadQueryFunction,\n  UseLoadableQueryResult,\n} from \"./useLoadableQuery.js\";\nexport { useLoadableQuery } from \"./useLoadableQuery.js\";\nexport type { UseQueryRefHandlersResult } from \"./useQueryRefHandlers.js\";\nexport { useQueryRefHandlers } from \"./useQueryRefHandlers.js\";\nexport type { UseReadQueryResult } from \"./useReadQuery.js\";\nexport { useReadQuery } from \"./useReadQuery.js\";\nexport { skipToken } from \"./constants.js\";\nexport type { SkipToken } from \"./constants.js\";\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}