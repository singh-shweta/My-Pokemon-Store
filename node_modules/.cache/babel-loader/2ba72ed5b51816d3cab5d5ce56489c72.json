{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { visit } from \"graphql\";\nexport function filterOperationVariables(variables, query) {\n  var result = __assign({}, variables);\n  var unusedNames = new Set(Object.keys(variables));\n  visit(query, {\n    Variable: function (node, _key, parent) {\n      // A variable type definition at the top level of a query is not\n      // enough to silence server-side errors about the variable being\n      // unused, so variable definitions do not count as usage.\n      // https://spec.graphql.org/draft/#sec-All-Variables-Used\n      if (parent && parent.kind !== \"VariableDefinition\") {\n        unusedNames.delete(node.name.value);\n      }\n    }\n  });\n  unusedNames.forEach(function (name) {\n    delete result[name];\n  });\n  return result;\n}","map":{"version":3,"sources":["../../../src/link/utils/filterOperationVariables.ts"],"names":[],"mappings":";AACA,SAAS,KAAK,QAAQ,SAAS;AAE/B,OAAM,SAAU,wBAAwB,CACtC,SAA8B,EAC9B,KAAmB,EAAA;EAEnB,IAAM,MAAM,GAAA,QAAA,CAAA,CAAA,CAAA,EAAQ,SAAS,CAAE;EAC/B,IAAM,WAAW,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACnD,KAAK,CAAC,KAAK,EAAE;IACX,QAAQ,EAAA,SAAA,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAA;MACzB;MACA;MACA;MACA;MACA,IACE,MAAM,IACL,MAAiC,CAAC,IAAI,KAAK,oBAAoB,EAChE;QACA,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;MACrC;IACF;GACD,CAAC;EACF,WAAW,CAAC,OAAO,CAAC,UAAC,IAAI,EAAA;IACvB,OAAO,MAAO,CAAC,IAAI,CAAC;EACtB,CAAC,CAAC;EACF,OAAO,MAAM;AACf","sourcesContent":["import type { VariableDefinitionNode, DocumentNode } from \"graphql\";\nimport { visit } from \"graphql\";\n\nexport function filterOperationVariables(\n  variables: Record<string, any>,\n  query: DocumentNode\n) {\n  const result = { ...variables };\n  const unusedNames = new Set(Object.keys(variables));\n  visit(query, {\n    Variable(node, _key, parent) {\n      // A variable type definition at the top level of a query is not\n      // enough to silence server-side errors about the variable being\n      // unused, so variable definitions do not count as usage.\n      // https://spec.graphql.org/draft/#sec-All-Variables-Used\n      if (\n        parent &&\n        (parent as VariableDefinitionNode).kind !== \"VariableDefinition\"\n      ) {\n        unusedNames.delete(node.name.value);\n      }\n    },\n  });\n  unusedNames.forEach((name) => {\n    delete result![name];\n  });\n  return result;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}