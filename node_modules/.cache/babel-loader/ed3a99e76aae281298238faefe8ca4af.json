{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { compact } from \"./compact.js\";\nexport function mergeOptions(defaults, options) {\n  return compact(defaults, options, options.variables && {\n    variables: compact(__assign(__assign({}, defaults && defaults.variables), options.variables))\n  });\n}","map":{"version":3,"sources":["../../../src/utilities/common/mergeOptions.ts"],"names":[],"mappings":";AAOA,SAAS,OAAO,QAAQ,cAAc;AAOtC,OAAM,SAAU,YAAY,CAI1B,QAAgE,EAChE,OAAqC,EAAA;EAErC,OAAO,OAAO,CACZ,QAAQ,EACR,OAAO,EACP,OAAO,CAAC,SAAS,IAAI;IACnB,SAAS,EAAE,OAAO,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACZ,QAAQ,IAAI,QAAQ,CAAC,SAAU,CAAA,EAChC,OAAO,CAAC,SAAS,CAAA;GAEvB,CACF;AACH","sourcesContent":["import type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core/index.js\";\n\nimport { compact } from \"./compact.js\";\n\ntype OptionsUnion<TData, TVariables extends OperationVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext, any>;\n\nexport function mergeOptions<\n  TDefaultOptions extends Partial<OptionsUnion<any, any, any>>,\n  TOptions extends TDefaultOptions,\n>(\n  defaults: TDefaultOptions | Partial<TDefaultOptions> | undefined,\n  options: TOptions | Partial<TOptions>\n): TOptions & TDefaultOptions {\n  return compact(\n    defaults,\n    options,\n    options.variables && {\n      variables: compact({\n        ...(defaults && defaults.variables),\n        ...options.variables,\n      }),\n    }\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}