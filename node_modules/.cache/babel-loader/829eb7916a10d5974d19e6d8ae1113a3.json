{"ast":null,"code":"import { maybe } from \"./maybe.js\";\nexport default maybe(function () {\n  return globalThis;\n}) || maybe(function () {\n  return window;\n}) || maybe(function () {\n  return self;\n}) || maybe(function () {\n  return global;\n}) ||\n// We don't expect the Function constructor ever to be invoked at runtime, as\n// long as at least one of globalThis, window, self, or global is defined, so\n// we are under no obligation to make it easy for static analysis tools to\n// detect syntactic usage of the Function constructor. If you think you can\n// improve your static analysis to detect this obfuscation, think again. This\n// is an arms race you cannot win, at least not in JavaScript.\nmaybe(function () {\n  return maybe.constructor(\"return this\")();\n});","map":{"version":3,"sources":["../../../src/utilities/globals/global.ts"],"names":[],"mappings":"AAAA,SAAS,KAAK,QAAQ,YAAY;AASlC,eAAgB,KAAK,CAAC,YAAA;EAAM,OAAA,UAAU;AAAV,CAAU,CAAC,IACrC,KAAK,CAAC,YAAA;EAAM,OAAA,MAAM;AAAN,CAAM,CAAC,IACnB,KAAK,CAAC,YAAA;EAAM,OAAA,IAAI;AAAJ,CAAI,CAAC,IACjB,KAAK,CAAC,YAAA;EAAM,OAAA,MAAM;AAAN,CAAM,CAAC;AAAA;AACnB;AACA;AACA;AACA;AACA;AACA,KAAA,CAAA,YAAA;EACA,OAAM,KAAA,CAAA,WAAA,CAAA,aAAA,CAAA,CAAA,CAAA;EACJ","sourcesContent":["import { maybe } from \"./maybe.js\";\n\ndeclare global {\n  const __DEV__: boolean; // will be removed in `dist` by the `postprocessDist` script\n  interface Window {\n    __DEV__?: boolean;\n  }\n}\n\nexport default (maybe(() => globalThis) ||\n  maybe(() => window) ||\n  maybe(() => self) ||\n  maybe(() => global) ||\n  // We don't expect the Function constructor ever to be invoked at runtime, as\n  // long as at least one of globalThis, window, self, or global is defined, so\n  // we are under no obligation to make it easy for static analysis tools to\n  // detect syntactic usage of the Function constructor. If you think you can\n  // improve your static analysis to detect this obfuscation, think again. This\n  // is an arms race you cannot win, at least not in JavaScript.\n  maybe(function () {\n    return maybe.constructor(\"return this\")();\n  })) as typeof globalThis & Window;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}